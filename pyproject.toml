[project]
name = "mcp-server-sports"
version = "0.1.0"
description = "Model Context Protocol SDK for real-time sports stats. Requires an API key from SportsRadar"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Robert Oxley" }]
maintainers = [{ name = "Robert Oxley", email = "robert@oxley.ca" }]
keywords = ["mcp", "llm", "automation", "sports", "stats"]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "fastapi",
    "uvicorn",
    "requests",
    "argparse",
    "pydantic",
    "starlette",
    "geopy",
    "fastmcp",
    "typing-extensions",  
]

[project.optional-dependencies]
rich = ["rich>=13.9.4"]
cli = ["typer>=0.12.4", "python-dotenv>=1.0.0"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_sports_server"]

[tool.hatch.build.targets.sdist]
packages = ["src/mcp_sports_server"]

[project.scripts]
start_server = "mcp.server:serve"  

[tool.uv]
resolution = "lowest-direct"
dev-dependencies = [
    "pyright>=1.1.391",
    "pytest>=8.3.4",
    "ruff>=0.8.5",
    "trio>=0.26.2",
    "pytest-flakefinder>=1.1.0",
    "pytest-xdist>=3.6.1",
]

[tool.ruff]
line-length = 88
target-version = "py310"
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "RUF", # ruff-specific rules
]

[tool.ruff.lint]
ignore = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/server/fastmcp/test_func_metadata.py" = ["E501"]

[tool.pyright]
include = ["src/mcp", "tests"]
venvPath = "."
venv = ".venv"
pythonVersion = "3.10"
typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false